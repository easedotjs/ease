{
  "version": 3,
  "sources": ["index.js"],
  "sourcesContent": ["if (typeof ease === 'undefined') {\n  throw new Error('This library requires Ease to be loaded first')\n}\nease.extensions.require(['@easedotjs/reactive'])\nease.extensions.before(['@easedotjs/components'])\n\n// Get the live method from the reactive extension\nconst live = ease.extensions.get('@easedotjs/reactive').methods.live;\n\n/**\n * Parses a template string and converts all {{}} to <reactive-text></reactive-text>\n * @param {string} The text content of a <template> tag \n * @returns A string with the text wrapped in <reactive-text></reactive-text>\n */\nfunction parseTemplate(template) {\n return template.replace(/{{(.*?)}}/, '<reactive-text>$1</reactive-text>')\n}\n\n/**\n * When a component is initialized, this method is called to convert all reactive-text elements to reactive values\n * @param {object} An object containing the shadow root and args \n */\nfunction onInit({ shadow, args }) {\n  // Find all reactive-text elements\n  let reactiveTextElements = shadow.querySelectorAll('reactive-text')\n  \n  // Add reactive meta if it does not exist\n  args.rx = args.rx || {}\n\n  // Convert all reactive-text elements to reactive values\n  reactiveTextElements.forEach((element) => {\n    let key = element.textContent.trim()\n    let reactiveValue = live()\n    let textNode = document.createTextNode('')\n\n    element.parentNode.replaceChild(textNode, element)\n    \n    reactiveValue.subscribe((value) => {\n      textNode.textContent = value.value;\n    });\n    args.rx[key] = reactiveValue;\n  });\n}\n\nfunction onCleanup({args}) {\n  if (args.rx) {\n    Object.keys(args.rx).forEach((key) => {\n      args.rx[key].unsubscribe()\n    })\n  } \n}\n\nease.extensions.add({\n  name: '@easedotjs/reactive-dom',\n  ['@easedotjs/components']: { \n    parseTemplate,\n    onInit,\n    onCleanup\n  }\n});\n"],
  "mappings": "MAAA,GAAI,OAAO,KAAS,IAClB,MAAM,IAAI,MAAM,+CAA+C,EAEjE,KAAK,WAAW,QAAQ,CAAC,qBAAqB,CAAC,EAC/C,KAAK,WAAW,OAAO,CAAC,uBAAuB,CAAC,EAGhD,IAAMA,EAAO,KAAK,WAAW,IAAI,qBAAqB,EAAE,QAAQ,KAOhE,SAASC,EAAcC,EAAU,CAChC,OAAOA,EAAS,QAAQ,YAAa,mCAAmC,CACzE,CAMA,SAASC,EAAO,CAAE,OAAAC,EAAQ,KAAAC,CAAK,EAAG,CAEhC,IAAIC,EAAuBF,EAAO,iBAAiB,eAAe,EAGlEC,EAAK,GAAKA,EAAK,IAAM,CAAC,EAGtBC,EAAqB,QAASC,GAAY,CACxC,IAAIC,EAAMD,EAAQ,YAAY,KAAK,EAC/BE,EAAgBT,EAAK,EACrBU,EAAW,SAAS,eAAe,EAAE,EAEzCH,EAAQ,WAAW,aAAaG,EAAUH,CAAO,EAEjDE,EAAc,UAAWE,GAAU,CACjCD,EAAS,YAAcC,EAAM,KAC/B,CAAC,EACDN,EAAK,GAAGG,CAAG,EAAIC,CACjB,CAAC,CACH,CAEA,SAASG,EAAU,CAAC,KAAAP,CAAI,EAAG,CACrBA,EAAK,IACP,OAAO,KAAKA,EAAK,EAAE,EAAE,QAASG,GAAQ,CACpCH,EAAK,GAAGG,CAAG,EAAE,YAAY,CAC3B,CAAC,CAEL,CAEA,KAAK,WAAW,IAAI,CAClB,KAAM,0BACL,wBAA0B,CACzB,cAAAP,EACA,OAAAE,EACA,UAAAS,CACF,CACF,CAAC",
  "names": ["live", "parseTemplate", "template", "onInit", "shadow", "args", "reactiveTextElements", "element", "key", "reactiveValue", "textNode", "value", "onCleanup"]
}
