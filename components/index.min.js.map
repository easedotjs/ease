{
  "version": 3,
  "sources": ["vdom.js", "parser.js", "registry.js", "hydrate.js", "index.js"],
  "sourcesContent": ["const svgns = 'http://www.w3.org/2000/svg';\n\nexport class EaseAttribute {\n  name;value;\n\n  constructor(name, value) {\n    this.name = name;\n    this.value = value;\n  }\n}\n\nexport class EaseNode {\n  #tag;#attributes;#parent;#ns;\n  #meta = {};\n  #children = [];\n\n  constructor(tag, attributes, ns, children = []) {\n    this.#tag = tag;\n    this.#attributes = attributes;\n    this.#children.push(...children);\n    this.#ns = ns;\n  }\n\n  static fromString(text, ns) {\n    text = text.replace('>', '');\n    let [tag, ...attrs] = text.split(' ');\n    tag = tag.replace('<', '').trim();\n    let attrsArray = [];\n\n    // Parse attributes\n    attrs = attrs.join(' ');\n    let key, value, step = 0, buffer = '', quoted = false;\n    for (let i = 0; i < attrs.length; i++) {\n      if (attrs[i] === '=' && step === 0) {\n        key = buffer;\n        buffer = '';\n        step = 1;\n      } else if (attrs[i] === '\"') {\n        if (step === 2) {\n          value = buffer;\n          buffer = '';\n          step = 0;\n          const attr = new EaseAttribute(key.trim(), value);\n          attrsArray.push(attr);\n        } else {\n          quoted = true;\n        }\n      } else if (attrs[i] !== '\"' && step === 1 ) { \n        buffer += attrs[i];\n        step = 2;\n      } else {\n        buffer += attrs[i];\n      }\n    }\n\n    if (tag === 'svg') {\n      return new EaseNode(tag, attrsArray, svgns);\n    } else {\n      return new EaseNode(tag, attrsArray, ns);\n    }\n  }\n  \n  get parent() { return this.#parent }\n  get tag() { return this.#tag; }\n  get attributes() { return this.#attributes; }\n  get children() { return this.#children; }\n  get ns() { return this.#ns; }\n  get meta() { return this.#meta; }\n  set meta(value) { this.#meta = value; }\n  get htmlNode() {\n    if (this.meta.htmlNode) return this.meta.htmlNode;\n    const node = this.#ns ? document.createElementNS(this.#ns, this.#tag) : document.createElement(this.#tag);\n      this.#attributes.forEach((attr) => {\n        node.setAttribute(attr.name, attr.value.replace(/\"/g, ''));\n      });\n      this.#children.forEach((child) => {\n        node.appendChild(child.htmlNode);\n      });\n      this.meta.htmlNode = node;\n    return node;\n  }\n  \n\n  addChild(node) {\n    this.#children.push(node);\n    node.setParent(this);\n  }\n\n  setParent(node) {\n    this.#parent = node;\n  }\n\n  toString() {\n    return `<${this.#tag}${this.#attributes?.length?' ':''}${this.#attributes?.map?.((attr) => `${attr.name}${attr.value?`=\"${attr.value}\"`:''}`)?.join(' ')||''}>${this.#children.map((child) => child.toString()).join('')}</${this.#tag}>`;\n  }\n\n  insertBefore(newChild, beforeNode) {\n    const index = this.#children.indexOf(beforeNode);\n    if (index === -1) throw new Error('Child not found');\n    this.#children.splice(index, 0, newChild);\n    newChild.setParent(this);\n  }\n\n  replaceChild(child, withNode) {\n    const index = this.#children.indexOf(child);\n    if (index === -1) throw new Error('Child not found');\n    this.#children[index] = withNode;\n    withNode.setParent(this);\n  }\n\n  removeChild(child) {\n    const index = this.#children.indexOf(child);\n    if (index === -1) throw new Error('Child not found');\n    this.#children.splice(index, 1);\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  /**\n   * Replaces this node with one or more nodes\n   * @param {EaseNode|EaseNode[]} nodes A single node or multiple nodes to replace the current node with \n   */\n  replace(nodes) {\n    if (!Array.isArray(nodes)) nodes = [nodes];\n    nodes.forEach((node) => {\n      this.parent.insertBefore(node, this);\n    });\n    this.remove();\n  }\n\n  addMeta(key, val) {\n    this.#meta[key] = val;\n  }\n\n  getMeta(key) {\n    return this.#meta[key];\n  }\n\n  deleteMeta(key) {\n    delete this.#meta[key];\n  }\n\n  clone() {\n    const clone = new EaseNode(this.#tag, this.#attributes, this.#ns);\n    Object.keys(this.meta).forEach((key) => {\n      clone.addMeta(key, this.meta[key]);\n    });\n    this.#children.forEach((child) => {\n      clone.addChild(child.clone());\n    });\n    return clone;\n  }\n}\n\nexport class EaseTextNode extends EaseNode {\n  #text;\n\n  constructor(text) {\n    super('#TEXT', [], []);\n    this.#text = text;\n  }\n\n  get text() { return this.#text; }\n  set text(value) { this.#text = value; }\n  get htmlNode() { \n    if (this.meta.htmlNode) return this.meta.htmlNode;\n    const node = document.createTextNode(this.#text); \n    this.meta.htmlNode = node;\n    return node;\n  }\n  toString() { return this.#text; }\n  addChild() { throw new Error('Cannot add children to text node'); }\n  clone() { \n    const clone = new EaseTextNode(this.#text); \n    Object.keys(this.meta).forEach((key) => {\n      clone.addMeta(key, this.meta[key]);\n    });\n    return clone;\n  }\n}\n\nexport class EaseNodeParser {\n  constructor() {}\n\n  // TODO: Analyze regex vs manual parsing performance\n  parse(text) {\n    let root = new EaseNode('root');\n    let activeNode = root;\n    text.split(/(<[^>]+>)/).filter(it => !!it).forEach((block) => {\n      if (block.startsWith('<!')) return;\n      if (block.startsWith('</')) {\n        activeNode = activeNode.parent;\n      } else if (block.startsWith('<')) {\n        const newNode = EaseNode.fromString(block, activeNode.ns);\n        activeNode.addChild(newNode);\n        if (!block.endsWith('/>')) {\n          activeNode = newNode;\n        }\n      } else if (block.trim().length > 0) {\n        activeNode.addChild(new EaseTextNode(block.trim()));\n      }\n    });\n    return root;\n  }\n}\n", "import { EaseNode, EaseAttribute, EaseNodeParser } from './vdom.js';\n\n/** Text-based document parsing to reduce dependence on DOMParser\n * @property {string} content The content of the document\n */\nexport function parseDocument(document) {\n  const parser = new EaseNodeParser();\n  const template = parser.parse(document.match(/<template>([\\s\\S]*)<\\/template>/m)?.[1] || '');\n  const script = document.match(/<script>([\\s\\S]*)<\\/script>/m)?.[1] || '';\n  const style = document.match(/<style>([\\s\\S]*)<\\/style>/m)?.[1] || '';\n\n  const properties = document.match(/<property\\s?([^(/>)]+)\\/>/g)?.map((prop) => {\n      const nameMatch = prop.match(/name=\"([^\"]+)\"/);\n      const typeMatch = prop.match(/type=\"([^\"]+)\"/);\n      const defaultMatch = prop.match(/default=\"([^\"]+)\"/);\n      const requiredMatch = prop.match(/required/);\n      const exposeToStylesMatch = prop.match(/expose-to-styles/);\n      const attributeMatch = prop.match(/attribute/);\n  \n      const name = nameMatch ? nameMatch[1] : null;\n      const type = typeMatch ? typeMatch[1] : null;\n      const defaultVal = defaultMatch ? defaultMatch[1] : null;\n      const required = requiredMatch ? requiredMatch[1] === 'true' : false;\n      const exposeToStyles = !!exposeToStylesMatch;\n      const attribute = !!attributeMatch;\n  \n      return { name, type, default: defaultVal, required, exposeToStyles, attribute };\n    }) || [];\n\n  return {template, script, style, properties };\n}\n\nexport function templateToVdom(template) {\n  let i = 0;\n  let vdom = new EaseNode('root', [], []);\n  let activeNode = vdom;\n  let currentNode;\n\n  while (i < template.length) {\n    if (template[i] === '<') {\n      if (template[i + 1] === '/') {\n        while (template[i] !== '>') {\n          i++;\n        }\n        activeNode.children.push(currentNode);\n      } else {\n        currentNode = new EaseNode('root', [], []);\n      }\n    }\n  }\n}\n", "if (typeof ease === 'undefined') {\n  throw new Error('This library requires Ease to be loaded first')\n}\n\nimport { parseDocument } from './parser.js';\n\nconst { warn, error, info } = ease.log\nconst { config } = ease\n\n/**\n * The registry of components\n * @type {Map<string, ComponentRegistryDef>}\n */\nconst ComponentRegistry = new Map();\n\n/** \n * Defines an property \n * \n*/\nclass Property {\n  /** @type {string} The name of the property */\n  name;\n  /** @type {string} The type of the property */\n  type;\n  /** @type {string} The default value of the property */\n  default;\n  /** @type {boolean} Whether the property is required */\n  required;\n  /** @type {boolean} Should the property be made available to the style */\n  exposeToStyles;\n  /** @type {boolean} If true, expose this property as an attribute */\n  attribute;\n\n  /**\n   * Creates a new property definition\n   * @param {string} name The name of the property\n   * @param {string} type The type of the property\n   * @param {string} defaultVal The default value of the property\n   * @param {boolean} attribute Should the property be exposed as an attribute\n   * @param {boolean} required Whether the property is required \n   * @param {boolean} exposeToStyles Should the property be made available to the style\n   */\n  constructor(name, type, defaultVal, required, exposeToStyles, attribute) {\n    this.name = name;\n    this.type = type || 'string';\n    this.default = defaultVal;\n    this.required = required;\n    this.attribute = attribute;\n    this.exposeToStyles = exposeToStyles;\n  }\n}\n  \n/**\n * Defines a component to be entered into the registry\n */\nclass ComponentRegistryDef {\n  /** @type {HTMLTemplateElement} The template for the component */\n  template;\n  /** @type {string} The tag name of the component */\n  tagName;\n  /** @type {string} The script body for the component, stored as a Blob */\n  script;\n  /** @type {string} The style for the component */\n  style;\n  /** @type {Property[]} The properties available in the component */\n  properties;\n  /** @type {string} The source of the component */\n  href;\n\n  /**\n   * Creates a new component definition\n   * @param {HTMLTemplateElement} template The template for the component\n   * @param {string} tagName The tag name of the component\n   * @param {string} script The script body for the component\n   * @param {string} style The style for the component\n   * @param {string} properties The properties for the component\n   */\n  constructor(href, template, tagName, script, style, properties) {\n    this.href = href;\n    this.template = template;\n    this.tagName = tagName;\n    this.script = this._scriptBlobFromText(script);\n    this.style = style;\n    this.properties = properties;\n  }\n\n  _scriptBlobFromText(text) {\n    if (!text) return null;\n    const blob = new Blob([text], { type: 'text/javascript' });\n    return URL.createObjectURL(blob);\n  }\n}\n\n/**\n * Fetches a component from a URL and returns a ComponentRegistryDef\n * @param {string} tagName The tag name of the component\n * @param {string} href The URL to fetch the component from\n * @returns {Promise<ComponentRegistryDef>} The component definition\n */\nexport async function fetchComponent(tagName, href) {\n  if (ComponentRegistry.has(tagName)) {\n    const existingItem = ComponentRegistry.get(tagName);\n    if (existingItem.href !== href) {\n      throw error(`Component ${tagName} already exists in the registry with a different href`).toError();\n    }\n    return existingItem;\n  }\n\n  return await fetch(`${href}`, { headers: { 'x-ease-fetch': 'true' } })\n    .then(async (response) => ({ content: await response.text(), code: response.status }))\n    .then(({content, code}) => {\n      if (code !== 200) {\n        throw error(`Failed to fetch component from ${href}`).toError();\n        return;\n      }\n\n      const {template, script, style, properties} = parseDocument(content);\n\n      // Run the component through extensions\n      ease.extensions.getExtensionsByArtifact('@easedotjs/components').forEach(([extension, name]) => {\n        if (extension.onFetchComponent) {\n          try {\n            extension.onFetchComponent({template, script, style});\n          } catch (e) {\n            error(`Failed to run extension ${name} onFetchComponent for ${href}`, e);\n          }\n        }\n      });\n\n      return {template, script, style, properties};\n    }).then(({template, script, style, properties}) => {\n      return new ComponentRegistryDef(href, template, tagName, script, style, properties);\n    })\n    .catch((err) => {\n      error(`Failed to fetch component from ${href}`);\n    });\n  }\n\n/**\n * Registers a component with the registry\n * @param {ComponentRegistryDef} def The component definition\n */\nexport function registerComponent(def) {\n  if (!def) { return }\n  // TODO: Validate the component definition\n  if (!ComponentRegistry.has(def.tagName)) {\n    ComponentRegistry.set(def.tagName, def);\n  }\n}\n\n/**\n * Fetches a component from the registry\n * @param {string} tagName The tag name of the component\n * @returns \n */\nexport function getComponent(tagName) {\n  return ComponentRegistry.get(tagName);\n}\n\n/**\n * Fetches a component from a link element and registers it, or returns the existing component\n * @param {HTMLLinkElement} link The link element to fetch the component from\n * @returns {Promise<ComponentRegistryDef>} The component definition\n */\nexport async function fetchComponentFromLink(link) {\n  return fetchComponent(link.getAttribute('rel'), link.href)\n    .then((def) => {\n      registerComponent(def);\n      return def;\n    });\n}\n", "if (typeof ease === 'undefined') {\n  throw new Error('This library requires Ease to be loaded first')\n}\n\nimport { getComponent } from './registry.js';\nconst { config, extensions } = ease\nconst { error } = ease.log\n\n/**\n * Creates the class for a web component from the registry\n * @param {ComponentRegistryDef} registryDef The registry definition\n * @returns {typeof HTMLElement} The web component class\n */\nexport function createWebComponentClass(\n  tagName,\n  template,\n  style,\n  scriptUrl,\n  properties,\n) {\n  // TODO: A lot of this code is only needed to be initialized once \n  //       - we should make it static on the class\n  const component = class extends HTMLElement {\n    /** The shadow element that holds the content */\n    #shadow;\n    #mounted = false;\n    #styleEl;\n    #propStyleEl;\n    eventListeners = [];\n    #vdom;\n    #args = {\n      // The shadow\n      root: undefined,\n      // Elements\n      elements: {},\n      get el() { return this.elements },\n      // Properties\n      properties: {},\n      get props() { return this.properties },\n      // Extensions\n      extensions: {},\n      get ext() { return this.extensions },\n      get [config.inject.name]() { return this.extensions},\n      // Attributes\n      attributes: {},\n      get attrs() { return this.attributes },      \n    };\n\n    constructor() {\n      super();\n\n      // Allows accessing the component from methods\n      let self = this;\n      \n      //if (template.hasAttribute('shadowless')) {\n      //  this.#shadow = this;\n      //} else {\n        // Create the shadow DOM\n        this.#shadow = this.attachShadow({mode: 'open'});\n        this.#args.root = this.#shadow;\n      //}\n\n      this.#vdom = template.clone();\n    }\n\n    #applyEaseElements () {\n      const self = this;\n      \n      // Clone the template into the shadow DOM\n      this.#vdom.children.forEach((el) => {\n        this.#shadow.appendChild(el.htmlNode);\n      });\n      \n      // Load the stylesheet\n      if (style) {\n        this.#styleEl = document.createElement('style');\n        this.#styleEl.textContent = style;\n        this.#shadow.appendChild(this.#styleEl);\n      } \n\n      // Get properties and store them in the properties object\n      let propStyles = '';\n      properties?.forEach?.((prop) => {\n        this.#args.properties[prop.name] = {\n          _listeners: [],\n          _value: prop.default,\n          type: prop.type,\n          required: prop.required,\n          exposeToStyles: prop.exposeToStyles,\n          attribute: prop.attribute,\n          get value() { return this._value },\n          set value(v) { \n            const prev = this._value;\n            this._value = v;\n            this._listeners.forEach((l) => l(v, prev));\n            if (this.exposeToStyles) self.updateStyles();\n          },\n          /**\n           * Adds a watcher to the property, which receives the current and previous values\n           * This will be invoked on mount and whenever the value changes\n           * @param {function} callback \n           */\n          watch(callback) {\n            this._listeners.push(callback);\n            if (!this.mounted) {\n              callback(this.value, undefined);\n            }\n          },\n          /**\n           * Removes a watcher from the property\n           * @param {function} callback\n           */\n          unwatch(callback) {\n            this._listeners = _listeners.filter((l) => l !== callback);\n          },\n          /**\n           * Removes all watchers from the property\n           */\n          unwatchAll() {\n            this._listeners = [];\n          }\n        };\n        \n        Object.defineProperty(this, prop.name, {\n          get: () => this.#args.properties[prop.name].value,\n          set: (v) => { \n            this.#args.properties[prop.name].value = v\n          }\n        })\n\n        // If the attribute is required, throw an error if it is not present \n        if (prop.required && prop.attribute && !this.hasAttribute(prop.name)) {\n          throw error(`Attribute ${prop.name} is required`).toError();\n        }\n\n        if (prop.attribute) {\n          this.#args.properties[prop.name].value = this.getAttribute(prop.name) || prop.default;\n        }\n\n        // If the property is set for style exposure, add it to the style element\n        if (prop.exposeToStyles) {\n          propStyles += `--${prop.name}: ${this.#args.properties[prop.name].value}; `;\n        }\n      });\n\n      // Add the attribute styles to the style element\n      if (propStyles) {\n        this.#propStyleEl = document.createElement('style');\n        this.#propStyleEl.textContent += `:host { ${propStyles} }`;\n        this.#shadow.insertBefore(this.#propStyleEl, this.#styleEl);\n      }\n\n      // Get elements by ID and store them in the elements object\n      this.#shadow.querySelectorAll('[id]').forEach((el) => {\n        this.#args.elements[el.id] = el;\n      });\n      \n      // Get all extensions\n      this.#args.extensions = extensions.all.reduce((p, c) => {\n        const objects = c.objects || {};\n        const methods = c.methods || {};\n        return {...p, ...objects, ...methods};\n      }, {});\n\n      // Override event listeners; this allows tracking event listeners\n      // and removing them when the component is disconnected\n      const shadowAddEventListener = this.#shadow.addEventListener;\n      this.#shadow.addEventListener = function (name, callback) {\n        self.eventListeners.push({ name, callback })\n        shadowAddEventListener(name, callback)\n      }\n      \n      const shadowRemoveEventListener = this.#shadow.removeEventListener;\n      this.#shadow.removeEventListener = function (name, callback) {\n        self.eventListeners = self.eventListeners.filter(({ name: n, callback: c }) => {\n          if (n === name && c === callback) {\n            shadowRemoveEventListener(name, callback)\n            return false\n          }\n          return true\n        })\n      }\n            \n      // Load the script\n      if (scriptUrl) {\n        import(scriptUrl).then((module) => {\n          if (!module.default) return;          \n          // If the module has a default export, call it with the component as the argument\n          if (module.default) module.default.apply(self, [{...this.#args, self }]);\n          \n          // Dispatch a connect event\n          this.#shadow.dispatchEvent(new CustomEvent('connect'));\n        });\n      }\n\n      // Handle initialization through extensions\n      extensions.getExtensionsByArtifact('@easedotjs/components').forEach(([ext]) =>\n        ext.onInit?.({ shadow: this.#shadow, args: this.#args, instance: self })\n      );\n\n      // Get attributes and store them in the attributes object\n      Array.from(this.attributes).forEach((attr) => {\n        this.#args.attributes[attr.name] = attr.value;\n      });\n    }\n\n    // Update Styles to reflect attribute changes\n    updateStyles() {\n      if (!this.#propStyleEl) return;\n      let propStyles = '';\n      Object.keys(this.#args.properties).forEach((key) => {\n        const prop = this?.[key];\n        if (prop.exposeToStyles) {\n          attrStyles += `--${key}: ${prop.value}; `;\n        }\n      });\n      this.#propStyleEl.textContent = `:host { ${propStyles} }`;\n    };\n\n    // On connect, add watchers\n    connectedCallback() {\n      this.#applyEaseElements();\n      this.#mounted = true;\n      // Dispatch a connect event\n      this.#shadow.dispatchEvent(new CustomEvent('connect'));\n    }\n\n    // On disconnect, remove all watchers\n    disconnectedCallback() {\n      this.#mounted = false;\n      this.#args.properties?.forEach?.((attr) => {\n        attr.unwatchAll();\n      });\n      this.#shadow.dispatchEvent(new CustomEvent('disconnect'));\n\n      // Remove all event listeners\n      this.eventListeners.forEach(({ name, callback }) => {\n        this.#shadow.removeEventListener(name, callback)\n      })\n\n      // Handle cleanup through extensions\n      extensions.getExtensionsByArtifact('@easedotjs/components').forEach(([ext]) =>\n        ext.onCleanup?.({ shadow: this.#shadow, args: this.#args })\n      );\n    }\n\n    static get observedAttributes() {\n      return properties.filter((prop) => prop.attribute).map((attr) => attr.name);\n    }\n\n    get mounted() { return this.#mounted; }\n    get vdom() { return this.#vdom; }\n    \n  }\n  customElements.define(tagName, component);\n  return component;\n}", "if (typeof ease === 'undefined') {\n  throw new Error('This library requires Ease to be loaded first')\n}\n\nconst { warn, error, info } = ease.log\n\nimport { fetchComponent, registerComponent } from './registry.js'\nimport { createWebComponentClass } from './hydrate.js'\nimport * as vdom from './vdom.js'\n\n// Get components defined in the document\nconst componentPromises = Array.from(document.querySelectorAll('link[rel=\"component\"]')).map(async (link) => {\n  const def = await fetchComponent(link.getAttribute('name'), link.href);\n  // Register the component\n  registerComponent(def);\n  // Define the custom element\n  createWebComponentClass(def.tagName, def.template, def.style, def.script, def.properties);\n})\n\n// Get component definitions\nconst componentDefPromises = Array.from(document.querySelectorAll('link[rel=\"component-def\"]')).map(async (link) => {\n  return fetch(`${link.href}`, { headers: { 'x-ease-fetch': 'true' } }).then((response) => {\n    if (response.status === 404) {\n      throw warn(`Failed to load component from ${href}`, 'URL returned 404').toError();\n    }\n    return response.text()\n  }).then(async (content) => {\n    // Fetch the component def xml\n    let parser = new DOMParser()\n    let components = parser.parseFromString(content, 'text/xml').querySelector('components')\n    const promises = Array.from(components.childNodes).map(async (component) => {\n      if (component.nodeName === 'component') {\n        await fetchComponent(component.attributes['name'].value, component.attributes['href'].value)\n          .then((def) => {\n            // Register the component\n            registerComponent(def);\n\n            // Define the custom element\n            createWebComponentClass(def.tagName, def.template, def.style, def.script, def.properties);\n          })\n          .catch((err) => {\n            error(`Failed to load component from ${component.attributes['href'].value}`, err)\n          })\n      }\n    })\n    await Promise.all(promises)\n    info(`Loaded component definitions from ${link.href}`)\n  })\n})\n\n// Rehydrate the document if it's wrapped in a template\n// This allows us to defer rendering\nPromise.all([...componentPromises, ...componentDefPromises]).then(() => {\n  const rootTemplate = document.querySelector('body > template');\n  if (rootTemplate) {\n    rootTemplate.replaceWith(rootTemplate.content);\n  }\n  document.body.classList.add('hydrated');\n});\n\nease.extensions.add({\n  name: '@easedotjs/components',\n  vdom,\n});"],
  "mappings": "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",
  "names": ["vdom_exports", "__export", "EaseAttribute", "EaseNode", "EaseNodeParser", "EaseTextNode", "svgns", "name", "value", "_EaseNode", "#tag", "#attributes", "#parent", "#ns", "#meta", "#children", "tag", "attributes", "ns", "children", "text", "attrs", "attrsArray", "key", "step", "buffer", "quoted", "i", "attr", "node", "child", "newChild", "beforeNode", "index", "withNode", "nodes", "val", "clone", "_EaseTextNode", "#text", "root", "activeNode", "it", "block", "newNode", "parseDocument", "document", "template", "EaseNodeParser", "script", "style", "properties", "prop", "nameMatch", "typeMatch", "defaultMatch", "requiredMatch", "exposeToStylesMatch", "attributeMatch", "name", "type", "defaultVal", "required", "warn", "error", "info", "config", "ComponentRegistry", "ComponentRegistryDef", "href", "template", "tagName", "script", "style", "properties", "text", "blob", "fetchComponent", "ComponentRegistry", "existingItem", "error", "response", "content", "code", "parseDocument", "extension", "name", "e", "err", "registerComponent", "def", "config", "extensions", "error", "createWebComponentClass", "tagName", "template", "style", "scriptUrl", "properties", "component", "#shadow", "#mounted", "#styleEl", "#propStyleEl", "#vdom", "#args", "self", "#applyEaseElements", "el", "propStyles", "prop", "v", "prev", "l", "callback", "p", "c", "objects", "methods", "shadowAddEventListener", "name", "shadowRemoveEventListener", "n", "module", "ext", "attr", "key", "warn", "error", "info", "componentPromises", "link", "def", "fetchComponent", "registerComponent", "createWebComponentClass", "componentDefPromises", "response", "content", "components", "promises", "component", "err", "rootTemplate", "vdom_exports"]
}
