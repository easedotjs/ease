(()=>{if(typeof ease>"u")throw new Error("This library requires Ease to be loaded first");var{warn:b,error:h,info:w}=ease.log,{config:g}=ease,f={};async function C(e,n){let a,t,s,u=[],p;if(await fetch(n).then(async r=>({content:await r.text(),code:r.status})).then(({content:r,code:o})=>{if(o===404||o===0){a=document.createElement("template"),s=document.createElement("style"),g.core.debug&&(h(`Failed to load component '${e}' from ${n}`),a.innerHTML=`<div><strong>Ease Component Error:</strong> Failed to load component '${e}' from ${n}</div>`,s.innerText=":host { color: #800; padding: 1rem; }");return}ease.extensions.all.forEach(l=>{l["@easedotjs/components"]?.parseTemplate&&(r=l["@easedotjs/components"].parseTemplate(r))});let i=new DOMParser().parseFromString(r,"text/html");i.querySelector("template")?(a=i.querySelector("template"),t=i.querySelector("script:not([src])"),s=i.querySelector("style")):(a=i.createElement("template"),a.innerHTML=r,i.body.appendChild(a)),a.content.querySelectorAll('meta[name="attribute"]').forEach(l=>{let m=l.attributes.content.value;u[m]={name:m,default:l.attributes.default?.value,style:!!l.attributes.style},l.remove()})}).catch(r=>{h(`Failed to load component '${e}' from ${n}`,r)}),t){let r=t.textContent,o=new Blob([r],{type:"text/javascript"});t=URL.createObjectURL(o)}return{template:a,script:t,style:s,attributes:u,src:n}}async function E(e){let n=e.attributes.name?.value,a=e.attributes.href?.value;return y(n,a)}async function y(e,n){if(!e)return h(`Component ${linkNode} missing name attribute`);if(!n)return h(`Component '${e}' missing href`);if(!e.includes("-"))return h(`Component '${e}' must contain a hyphen`);if(f[e])return f[e].src===n?w(`Component '${e}' already exists in registry`):h(`Component '${e}' already exists in registry with a different source`,`Existing component: ${f[e].src}`,`New component: ${n}`,"This will cause the existing component to be used instead of the new component","If you are using a router or other dynamic loading, try using different namespaces for components");let a=await C(e,n);if(!a.template)return h(`Component '${e}' missing template`);f[e]=a,customElements.define(e,class extends HTMLElement{attributes={};eventListeners=[];onUnload=void 0;args={test:2};constructor(){super();let t=f[e];if(!t)return h(`Component '${e}' not found in registry`);let s=this.attachShadow({mode:"open"});this.shadow=s;let u=t.template.content.querySelectorAll("link");if(u.forEach(E),u.forEach(r=>r.remove()),s.appendChild(t.template.content.cloneNode(!0)),t.style&&s.appendChild(t.style.cloneNode(!0)),t.script){let r=t.script,o=[];s.querySelectorAll("[id]").forEach(c=>{o[c.id]=c}),import(r).then(c=>{if(!c.default&&!t.script.attributes["no-warn"])return b(`Component '${e}' contains script tag but does not export a default. Use the no-warn attribute on the script tag if this is the intended behavior`);!c.default&&t.script.attributes["no-warn"]||(this.args={root:s,elements:o,get el(){return this.elements},attributes:[],get attr(){return this.attributes},extensions:{},get ext(){return this.extensions},get[g.inject.name](){return this.extensions}},g.inject.extensions.forEach(i=>{i.methods&&Object.keys(i.methods)?.forEach?.(d=>{if(i[d])return b(`Extension method '${d.name}' already exists in extensions, skipping`);this.args.extensions[d]=i.methods[d]}),Object.assign(this.args.extensions,i.objects)}),Object.keys(t.attributes).forEach(i=>{let d=t.attributes[i];this.attributes[d.name]={listeners:[],_value:this.getAttribute(d.name)||d.default,set value(l){let m=this._value;this._value=l,this.listeners.forEach(v=>v(l,m)),s.dispatchEvent(new CustomEvent("attribute-changed",{detail:{name:d.name,oldValue:m,newValue:l}}))},get value(){return this._value},watch(l){this.listeners.push(l),l(this.value,null)},unwatch(l){this.listeners=this.listeners.filter(m=>m!==l)},unwatchAll(){this.listeners=[]}}}),this.args.attributes=this.attributes,ease.extensions.all.forEach(i=>{i["@easedotjs/components"]?.onInit&&i["@easedotjs/components"].onInit({shadow:s,args:this.args})}),setTimeout(()=>{this.onUnload=c.default(this.args)}))}),Object.keys(t.attributes).forEach(c=>{let i=t.attributes[c];this.shadow.dispatchEvent(new CustomEvent("attribute-changed",{detail:{name:i,oldValue:null,newValue:this.getAttribute(i)}}))})}let p={};if(Object.keys(t.attributes).forEach(r=>{let o=t.attributes[r];o.style&&this.getAttribute(o.name)&&(p[o.name]=this.getAttribute(o.name))}),Object.keys(p).length>0){let r=document.createElement("style"),o=":host {";Object.keys(p).forEach(c=>{o+=`--${c}: ${p[c]};`}),o+="}",r.innerHTML=o,s.appendChild(r)}}attributeChangedCallback(t,s,u){this.attributes[t]&&(this.attributes[t].value=u)}addEventListener(t,s){this.eventListeners.push({name:t,callback:s}),this.shadow.addEventListener(t,s)}removeEventListener(t,s){this.eventListeners=this.eventListeners.filter(u=>u.name===t&&u.callback===s?(this.shadow.removeEventListener(t,s),!1):!0)}disconnectedCallback(){this.args&&(this.onUnload?.(this.args),this.eventListeners.forEach(t=>{this.shadow.removeEventListener(t.name,t.callback)}),ease.extensions.all.forEach(t=>{t["@easedotjs/components"]?.onCleanup&&t["@easedotjs/components"].onCleanup({shadow:this.shadow,args:this.args})}),this.args&&this.args.attributes&&Object.keys(this.args.attributes).forEach(t=>{this.args.attributes[t].unwatchAll()}))}static get observedAttributes(){return Object.keys(f[e].attributes)}})}function L(e){fetch(e).then(n=>{if(n.status===404)throw b(`Failed to load component from ${e}`);return n.text()}).then(n=>{new DOMParser().parseFromString(n,"text/xml").querySelector("components").childNodes.forEach(s=>{s.nodeName==="component"&&y(s.attributes.name.value,s.attributes.href.value)})})}document.addEventListener("ease_load_component",e=>{e.detail.name&&y(e.detail.name,e.detail.href)});document.addEventListener("DOMContentLoaded",()=>{let e=document.querySelectorAll(['link[rel="component"]']);e&&e.forEach(E);let n=document.querySelectorAll(['link[rel="component-def"]']);n&&n.forEach(a=>{L(a.attributes.href.value)}),!e&&!n&&b("No components found in document")});})();
//# sourceMappingURL=index.min.js.map
