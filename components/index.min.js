(()=>{if(typeof ease>"u")throw new Error("This library requires Ease to be loaded first");var{warn:T,error:v,info:$}=ease.log,{config:j}=ease,f=new Map,y=class{name;type;default;required;exposeToStyles;attribute;constructor(s,i,a,h,o,t){this.name=s,this.type=i||"string",this.default=a,this.required=h,this.attribute=t,this.exposeToStyles=o}},_=class{template;tagName;script;style;properties;href;constructor(s,i,a,h,o,t){this.href=s,this.template=i,this.tagName=a,this.script=this._scriptBlobFromText(h),this.style=o,this.properties=t}_scriptBlobFromText(s){if(!s)return null;let i=new Blob([s],{type:"text/javascript"});return URL.createObjectURL(i)}};async function w(r,s){if(f.has(r)){let t=f.get(r);if(t.href!==s)throw v(`Component ${r} already exists in the registry with a different href`).toError();return t}let{template:i,script:a,style:h,properties:o}=await fetch(s).then(async t=>({content:await t.text(),code:t.status})).then(({content:t,code:l})=>{if(l!==200)throw new Error(`Failed to fetch component from ${s}`);let m=new DOMParser().parseFromString(`${t}`,"text/html"),e=m.querySelector("template")||m.createElement("template"),n=m.querySelector("script:not([src])")?.textContent,c=m.querySelector("style")?.textContent,d=Array.from(m.querySelectorAll("property")).map(u=>new y(u.getAttribute("name"),u.getAttribute("type"),u.getAttribute("default"),u.hasAttribute("required"),u.hasAttribute("expose-to-styles"),u.hasAttribute("attribute")));return ease.extensions.getExtensionsByArtifact("@easedotjs/components").forEach(u=>{u.onFetchComponent&&u.onFetchComponent({template:e,script:n,style:c})}),{template:e,script:n,style:c,properties:d}});return new _(s,i,r,a,h,o)}function g(r){f.has(r.tagName)||f.set(r.tagName,r)}if(typeof ease>"u")throw new Error("This library requires Ease to be loaded first");var{config:x,extensions:E}=ease,{error:S}=ease.log;function b(r,s,i,a,h){let o=class extends HTMLElement{_shadow;_mounted=!1;_styleEl;_propStyleEl;_eventListeners=[];_args={root:void 0,elements:{},get el(){return this.elements},properties:{},get props(){return this.properties},extensions:{},get ext(){return this.extensions},get[x.inject.name](){return this.extensions}};constructor(){super();let t=this;s.hasAttribute("shadowless")?this._shadow=this:(this._shadow=this.attachShadow({mode:"open"}),this._args.root=this._shadow),this._shadow.tagName=r,this._shadow.appendChild(s.content.cloneNode(!0)),i&&(this._styleEl=document.createElement("style"),this._styleEl.textContent=i,this._shadow.appendChild(this._styleEl));let l="";h?.forEach?.(e=>{if(this._args.properties[e.name]={_listeners:[],_value:e.default,type:e.type,required:e.required,exposeToStyles:e.exposeToStyles,attribute:e.attribute,get value(){return this._value},set value(n){let c=this._value;this._value=n,this._listeners.forEach(d=>d(n,c)),this.exposeToStyles&&t.updateStyles()},watch(n){this._listeners.push(n),this._mounted||n(this.value,void 0)},unwatch(n){this._listeners=_listeners.filter(c=>c!==n)},unwatchAll(){this._listeners=[]}},Object.defineProperty(this,e.name,{get:()=>this._args.properties[e.name].value,set:n=>{this._args.properties[e.name].value=n}}),e.required&&e.attribute&&!this.hasAttribute(e.name))throw S(`Attribute ${e.name} is required`).toError();e.attribute&&(this._args.properties[e.name].value=this.getAttribute(e.name)||e.default),e.exposeToStyles&&(l+=`--${e.name}: ${this._args.properties[e.name].value}; `)}),l&&(this._propStyleEl=document.createElement("style"),this._propStyleEl.textContent+=`:host { ${l} }`,this._shadow.insertBefore(this._propStyleEl,this._styleEl)),this._shadow.querySelectorAll("[id]").forEach(e=>{this._args.elements[e.id]=e}),this._args.extensions=E.all.reduce((e,n)=>{let c=n.objects||{},d=n.methods||{};return{...e,...c,...d}},{});let p=this._shadow.addEventListener;this._shadow.addEventListener=function(e,n){t._eventListeners.push({name:e,callback:n}),p(e,n)};let m=this._shadow.removeEventListener;this._shadow.removeEventListener=function(e,n){t._eventListeners=t._eventListeners.filter(({name:c,callback:d})=>c===e&&d===n?(m(e,n),!1):!0)},a&&import(a).then(e=>{e.default&&(e.default&&e.default.apply(t,[{...this._args,self:t}]),this._shadow.dispatchEvent(new CustomEvent("connect")))}),E.getExtensionsByArtifact("@easedotjs/components").forEach(e=>e.onInit?.({shadow:this._shadow,args:this._args,instance:t}))}updateStyles(){if(!this._propStyleEl)return;let t="";Object.keys(this._args.properties).forEach(l=>{let p=this?.[l];p.exposeToStyles&&(attrStyles+=`--${l}: ${p.value}; `)}),this._propStyleEl.textContent=`:host { ${t} }`}connectedCallback(){this._mounted=!0,this._shadow.dispatchEvent(new CustomEvent("connect"))}disconnectedCallback(){this._mounted=!1,this._args.properties?.forEach?.(t=>{t.unwatchAll()}),this._shadow.dispatchEvent(new CustomEvent("disconnect")),this._eventListeners.forEach(({name:t,callback:l})=>{this._shadow.removeEventListener(t,l)}),E.getExtensionsByArtifact("@easedotjs/components").forEach(t=>t.onCleanup?.({shadow:this._shadow,args:this._args}))}static get observedAttributes(){return h.filter(t=>t.attribute).map(t=>t.name)}};return customElements.define(r,o),o}if(typeof ease>"u")throw new Error("This library requires Ease to be loaded first");var{warn:A,error:M,info:C}=ease.log,q=Array.from(document.querySelectorAll('link[rel="component"]')).map(async r=>{let s=await w(r.getAttribute("name"),r.href);g(s),b(s.tagName,s.template,s.style,s.script,s.properties)}),L=Array.from(document.querySelectorAll('link[rel="component-def"]')).map(async r=>fetch(r.href).then(s=>{if(s.status===404)throw A(`Failed to load component from ${href}`);return s.text()}).then(async s=>{let a=new DOMParser().parseFromString(s,"text/xml").querySelector("components"),h=Array.from(a.childNodes).map(async o=>{o.nodeName==="component"&&await w(o.attributes.name.value,o.attributes.href.value).then(t=>{g(t),b(t.tagName,t.template,t.style,t.script,t.properties)})});await Promise.all(h),C(`Loaded component definitions from ${r.href}`)}));Promise.all([...q,...L]).then(()=>{let r=document.querySelector("body > template");r&&r.replaceWith(r.content),document.body.classList.add("hydrated")});})();
//# sourceMappingURL=index.min.js.map
