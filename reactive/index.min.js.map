{
  "version": 3,
  "sources": ["index.js"],
  "sourcesContent": ["/**\n * Creates reactive values that can be subscribed to.\n */\n\n/**\n * Creates a reactive value that can be subscribed to.\n * @param {*} initialValue The initial value of the reactive value\n * @param {*} handler An optional handler to be called when the value changes\n * @returns The reactive value\n */\nfunction live(initialValue = null, handler = null) {  \n  let _value = initialValue\n  let handlers = []\n\n  if (handler) {\n    handlers.push(handler)\n  }\n\n  return {\n    get value() {\n      return _value\n    },\n    set value(value) {\n      let original = _value\n      _value = value\n      handlers.forEach((handler) => {\n        handler({original, value: _value})\n      })\n    },\n    /**\n     * Subscribes to changes in the reactive value\n     * @param {*} handler A handler to be called when the value changes\n     * @returns A reference to self\n     */\n    subscribe: function (handler) {\n      handlers.push(handler)\n      return this\n    },\n    /**\n     * Unsubscribes from changes in the reactive value\n     * @param {*} handler The handler to be removed\n     * @returns A reference to self\n     */\n    unsubscribe: function (handler) {\n      handlers = handlers.filter((h) => h !== handler)\n      return this\n    }\n  }\n}\n\nif (ease !== undefined) {\n  ease.addExtension({\n    methods: [ live ]\n  })\n}\n"],
  "mappings": "MAUA,SAASA,EAAKC,EAAe,KAAMC,EAAU,KAAM,CACjD,IAAIC,EAASF,EACTG,EAAW,CAAC,EAEhB,OAAIF,GACFE,EAAS,KAAKF,CAAO,EAGhB,CACL,IAAI,OAAQ,CACV,OAAOC,CACT,EACA,IAAI,MAAME,EAAO,CACf,IAAIC,EAAWH,EACfA,EAASE,EACTD,EAAS,QAASF,GAAY,CAC5BA,EAAQ,CAAC,SAAAI,EAAU,MAAOH,CAAM,CAAC,CACnC,CAAC,CACH,EAMA,UAAW,SAAUD,EAAS,CAC5B,OAAAE,EAAS,KAAKF,CAAO,EACd,IACT,EAMA,YAAa,SAAUA,EAAS,CAC9B,OAAAE,EAAWA,EAAS,OAAQG,GAAMA,IAAML,CAAO,EACxC,IACT,CACF,CACF,CAEI,OAAS,QACX,KAAK,aAAa,CAChB,QAAS,CAAEF,CAAK,CAClB,CAAC",
  "names": ["live", "initialValue", "handler", "_value", "handlers", "value", "original", "h"]
}
