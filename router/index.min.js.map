{
  "version": 3,
  "sources": ["index.js"],
  "sourcesContent": ["if (!ease) {\n  throw new Error('This library requires Ease to be loaded first')\n}\n\nlet root = ease.config.router?.root || ''\n\nlet router = {\n  currentRoute: null,\n  push(path) {\n    this._navigate(path)\n    try {\n      window.history.pushState({}, '', path)\n    } catch (_) {\n      window.history.pushState({}, '', `#${path}`)\n    }\n  },\n  replace(path) {\n    this._navigate(path)\n    window.history.replaceState({}, '', path)\n  },\n  _navigate(path) {\n    let resolvedPath = this._resolvePath(path) \n    fetch(`${root}${resolvedPath}`).then((response) => {\n      return response.text()\n    }).then((html) => {\n      let domParser = new DOMParser()\n      let doc = domParser.parseFromString(html, 'text/html')\n      \n      // Load new script tags\n      doc.head.querySelectorAll('script').forEach((script) => {\n        if (document.querySelector(`script[src=\"${script.src}\"]`)) return\n        let newScript = document.createElement('script')\n        newScript.src = script.src\n        newScript.type = script.type\n        newScript.async = true\n        document.head.appendChild(newScript)\n      });\n\n      document.title = doc.querySelector('title').textContent\n      document.body.innerHTML = doc.querySelector('body').innerHTML\n\n      /* Load components that may not have been loaded */\n      doc.head.querySelectorAll('link[rel=\"component\"]').forEach((component) => {\n        let name = component.attributes['name']?.value\n        let href = component.attributes['href']?.value\n        document.dispatchEvent(new CustomEvent('ease_load_component', {detail: { name, href }}))\n      });\n    }).catch((error) => {\n      // Ignore for now to handle jumping to IDs\n    })\n  },\n  _resolvePath(path) {\n    if (path === '/' || path === '') {\n      return 'index'\n    }\n    return path.replace(/^\\//, '')\n  },\n  createRoute(path, file) {\n    this.routes.push({path, file})\n  }\n}\n\nease.extensions.add({\n  name: '@easedotjs/router',\n  objects: { router }\n})\n"],
  "mappings": "MAAA,GAAI,CAAC,KACH,MAAM,IAAI,MAAM,+CAA+C,EAGjE,IAAIA,EAAO,KAAK,OAAO,QAAQ,MAAQ,GAEnCC,EAAS,CACX,aAAc,KACd,KAAKC,EAAM,CACT,KAAK,UAAUA,CAAI,EACnB,GAAI,CACF,OAAO,QAAQ,UAAU,CAAC,EAAG,GAAIA,CAAI,CACvC,MAAY,CACV,OAAO,QAAQ,UAAU,CAAC,EAAG,GAAI,IAAIA,CAAI,EAAE,CAC7C,CACF,EACA,QAAQA,EAAM,CACZ,KAAK,UAAUA,CAAI,EACnB,OAAO,QAAQ,aAAa,CAAC,EAAG,GAAIA,CAAI,CAC1C,EACA,UAAUA,EAAM,CACd,IAAIC,EAAe,KAAK,aAAaD,CAAI,EACzC,MAAM,GAAGF,CAAI,GAAGG,CAAY,EAAE,EAAE,KAAMC,GAC7BA,EAAS,KAAK,CACtB,EAAE,KAAMC,GAAS,CAEhB,IAAIC,EADY,IAAI,UAAU,EACV,gBAAgBD,EAAM,WAAW,EAGrDC,EAAI,KAAK,iBAAiB,QAAQ,EAAE,QAASC,GAAW,CACtD,GAAI,SAAS,cAAc,eAAeA,EAAO,GAAG,IAAI,EAAG,OAC3D,IAAIC,EAAY,SAAS,cAAc,QAAQ,EAC/CA,EAAU,IAAMD,EAAO,IACvBC,EAAU,KAAOD,EAAO,KACxBC,EAAU,MAAQ,GAClB,SAAS,KAAK,YAAYA,CAAS,CACrC,CAAC,EAED,SAAS,MAAQF,EAAI,cAAc,OAAO,EAAE,YAC5C,SAAS,KAAK,UAAYA,EAAI,cAAc,MAAM,EAAE,UAGpDA,EAAI,KAAK,iBAAiB,uBAAuB,EAAE,QAASG,GAAc,CACxE,IAAIC,EAAOD,EAAU,WAAW,MAAS,MACrCE,EAAOF,EAAU,WAAW,MAAS,MACzC,SAAS,cAAc,IAAI,YAAY,sBAAuB,CAAC,OAAQ,CAAE,KAAAC,EAAM,KAAAC,CAAK,CAAC,CAAC,CAAC,CACzF,CAAC,CACH,CAAC,EAAE,MAAOC,GAAU,CAEpB,CAAC,CACH,EACA,aAAaV,EAAM,CACjB,OAAIA,IAAS,KAAOA,IAAS,GACpB,QAEFA,EAAK,QAAQ,MAAO,EAAE,CAC/B,EACA,YAAYA,EAAMW,EAAM,CACtB,KAAK,OAAO,KAAK,CAAC,KAAAX,EAAM,KAAAW,CAAI,CAAC,CAC/B,CACF,EAEA,KAAK,WAAW,IAAI,CAClB,KAAM,oBACN,QAAS,CAAE,OAAAZ,CAAO,CACpB,CAAC",
  "names": ["root", "router", "path", "resolvedPath", "response", "html", "doc", "script", "newScript", "component", "name", "href", "error", "file"]
}
