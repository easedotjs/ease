(()=>{var p=Object.defineProperty;var x=(e,r)=>{for(var n in r)p(e,n,{get:r[n],enumerable:!0})};var f={};x(f,{error:()=>a,info:()=>u,log:()=>h,warn:()=>d});function a(...e){if(o.core?.debug!=="silent")return console.group(`[Error] Ease: ${e[0]}`),e.slice(1).forEach(r=>console.error(r)),console.groupEnd(),{toError:()=>new Error(e.toString())}}function d(...e){if(o.core?.debug)return console.group(`[Warn] Ease: ${e[0]}`),e.slice(1).forEach(r=>console.warn(r)),console.groupEnd(),{toError:()=>new Error(e.toString())}}function h(...e){if(o.core?.debug)return console.group(`[Log] Ease: ${e[0]}`),e.slice(1).forEach(r=>console.log(r)),console.groupEnd(),{toError:()=>new Error(e.toString())}}function u(...e){if(!(!o.core?.debug||o.core.debug!=="verbose"))return console.group(`[Info] Ease: ${e[0]}`),e.slice(1).forEach(r=>console.info(r)),console.groupEnd(),{toError:()=>new Error(e.toString())}}function c(e=null,r=null){let n=e,i=[];return r&&i.push(r),{get value(){return n},set value(t){let s=n;n=t,i.forEach(E=>{E({original:s,value:n})})},subscribe:function(t){return i.push(t),this},unsubscribe:function(t){return i=i.filter(s=>s!==t),this},unsubscribeAll:function(){return i=[],this}}}var o={core:{debug:!1},inject:{name:"$",extensions:[]}};document.querySelectorAll("meta")?.forEach(e=>{if(e.name.startsWith("ease.")){let r=e.name.replace("ease.","").split("."),n=r.pop(),i=r.reduce((t,s)=>(t[s]===void 0&&(t[s]={}),t[s]),o);i[n]=e.content}});function b(e){let r=e.name||e.constructor.name;o.inject.extensions.push(e),u(`Extension '${r}' has been added to Ease`)}function l(e){return o.inject.extensions.find(r=>r.name===e)}function g(e){return typeof e=="string"?!!l(e):Array.isArray(e)?e.every(r=>!!l(r)):!1}function v(e){return typeof e=="string"&&(e=[e]),e.forEach(r=>{if(!g(r))throw new Error(`Extension '${r}' is required but not loaded`)}),!0}function w(e){typeof e=="string"&&(e=[e]),e.forEach(r=>{l(r)&&error(`Extension '${r}' is already loaded - this extension should be loaded before it`)})}function y(e){return o.inject.extensions.filter(r=>!!r[e]).map(r=>r[e])}o.core.debug&&u("Ease Loaded in Debug Mode");globalThis.ease={config:o,log:f,extensions:{add:b,get:l,has:g,require:v,before:w,getExtensionsByArtifact:y,all:o.inject.extensions},live:c};})();
//# sourceMappingURL=index.min.js.map
